<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="jaego">

	<select id="productSelectList" parameterType="condition" resultType="product">
	
		SELECT 
			 PRODUCT_CODE
			,PRODUCT_NAME
		FROM
			PRODUCT
		<where>
			<if test="keyword != null">
			PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')
			</if>
			<if test="keyword2 != null">
		AND
			PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			</if>
		</where>
	
	</select>

 	<select id="itemSelectList" parameterType="condition" resultType="item">
	
	    SELECT
		     II.II_PRODUCT_CODE     					AS ITEM_PRODUCT_CODE
		    ,II.II_PRODUCT_NAME     					AS ITEM_PRODUCT_NAME
		    ,IFNULL(II.II_QTY,0) - IFNULL(OI.OI_QTY,0)	AS ITEM_QTY
		FROM
		    (
		    SELECT 
		         II_PRODUCT_CODE
		        ,II_PRODUCT_NAME
		        ,SUM(II_QTY)	AS II_QTY	
		    FROM 
		        IN_ITEM
		         
		    <where>
		    	<if test="keyword != null">
		        II_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')
		    	</if>
		    	<if test="keyword2 != null">
			 AND     
		        II_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
		    	</if>
		    	<if test="endDate != null">
		 	 AND
<![CDATA[		II_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
				</if>	
		    </where>
		
		    GROUP BY
		         II_PRODUCT_CODE
		        ,II_PRODUCT_NAME
		    ) II
		LEFT JOIN
		    (
		    SELECT 
		         OI_PRODUCT_CODE
		        ,SUM(OI_QTY)    	AS OI_QTY		
		    FROM 
		    	OUT_ITEM
		
		    <where>
		    	<if test="keyword != null">
		        OI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')
		    	</if>
		    	<if test="keyword2 != null">
			 AND     
		        OI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
		    	</if>
		    	<if test="endDate != null">
		 	 AND
<![CDATA[		OI_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
				</if>	
		    </where>
			
		    GROUP BY
		        OI_PRODUCT_CODE
		    ) OI
		ON 
			II.II_PRODUCT_CODE = OI.OI_PRODUCT_CODE
		ORDER BY 
			II.II_PRODUCT_CODE
    
 	</select>
 	
 	<!-- 재고테이블 유효성 검사 -->
 	<select id="itemValidate" parameterType="item" resultType="int">
 	
 		SELECT 
		    COUNT(*) 
		FROM 
		    ITEM 
		WHERE 
		    ITEM_PRODUCT_CODE = #{item_product_code}
	
 	</select>
 	<update id="itemPlusUpdate" parameterType="item">
 	
 		UPDATE 
		    ITEM
		SET 
		    ITEM_QTY = ITEM_QTY + #{item_qty}
		WHERE 
		    ITEM_PRODUCT_CODE = #{item_product_code}
 	
 	</update>
 	
 	<update id="itemUpdateForDefectItem" parameterType="defectItem">
 	
 		UPDATE
 			ITEM
 		SET
 			ITEM_QTY = ITEM_QTY + #{di_qty}
 		WHERE 
 			ITEM_PRODUCT_CODE = #{di_product_code}
 	
 	</update>
 	
 	<update id="itemPlusUpdateForDefectItem" parameterType="list">
 	
 	INSERT INTO ITEM
 			(
 			 ITEM_NO
 			,ITEM_QTY
 			)
 		VALUES
 		
 		<foreach collection="list" item="item" separator=",">	
	 		
	 		(
	 		 (SELECT ITEM_NO FROM ITEM I WHERE ITEM_PRODUCT_CODE = #{item.di_product_code})
	 		,(SELECT ITEM_QTY + #{item.di_qty} FROM ITEM I2 WHERE ITEM_PRODUCT_CODE = #{item.di_product_code})
		    )
		    
 		</foreach>
 		
 		ON DUPLICATE KEY UPDATE
 			ITEM_QTY = VALUES(ITEM_QTY)
 		
 	
 	</update>
 	
 	<update id="itemMinusUpdate" parameterType="item">
 	
 		UPDATE 
		    ITEM
		SET 
		    ITEM_QTY = ITEM_QTY - #{item_qty}
		WHERE 
		    ITEM_PRODUCT_CODE = #{item_product_code}
 	
 	</update>

 	
 	<sql id="maxItemNo">
 		
 		SELECT 
 			MAX(IFNULL(ITEM_NO,0)) +1 
 		FROM 
 			ITEM
 	
 	</sql>
 	<insert id="itemInsert" parameterType="item">
 	
 		INSERT INTO 
		    ITEM(
		    	 ITEM_NO
		    	,ITEM_PRODUCT_CODE
		    	,ITEM_QTY
		    	) 
		VALUES(	
			(<include refid="maxItemNo"/>)	
			,#{item_product_code}
			,#{item_qty})
	
 	</insert>
 	
 	<select id="inItemSelectList" parameterType="condition" resultType="inItem"> 	
 	
 		SELECT 
			 II_PRODUCT_CODE
			,II_PRODUCT_NAME
			,II_QTY					
			,DATE_FORMAT(II_DATE,'%Y-%m-%d')	AS II_DATE 
		FROM 
			IN_ITEM
	 
		<where>
			<if test="keyword != null"> 
      
	        II_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')
	
		    </if> 
			<if test="keyword2 != null">
	  
		AND     
	        II_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
	
		    </if>
			<if test="endDate != '' and endDate != null">
	
		AND
<![CDATA[	II_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T') ]]>
	
			</if>
		</where> 
 	</select>
 	
 	<select id="orderInItemSelect" parameterType="int" resultType="inItem">
 	
 		SELECT 
		     ORDER_PRODUCT_CODE  	AS II_PRODUCT_CODE
		    ,ORDER_PRODUCT_NAME 	AS II_PRODUCT_NAME
		    ,ORDER_QT   			AS II_QTY
		    ,ORDER_II_NO			AS II_NO
		FROM
		    ORDER_INPUT
		INNER JOIN 
		    ORDERLIST
		ON 
		    ORDIN_NUM = ORDER_ORDIN_NUM
		WHERE
		    ORDIN_NUM = #{ordin_num}
	
 	</select>
 	
 	<insert id="inItemInsert" parameterType="inItem">
 		<selectKey keyProperty="ii_no" resultType="int" order="BEFORE">
 			
 			SELECT
 				IFNULL(MAX(II_NO),0) +1
 			FROM
 				IN_ITEM
 		
 		</selectKey>
 	
 		INSERT INTO 
 			IN_ITEM
			(
			 II_NO
			,II_ORDIN_NUM
			,II_PRODUCT_CODE
			,II_PRODUCT_NAME
			,II_QTY
			)
		VALUES
			(
			 #{ii_no}
			,#{ii_ordin_num}
			,#{ii_product_code}
			,#{ii_product_name}
			,#{ii_qty}
			)
			
 	</insert>
 	
 	<delete id="inItemDelete" parameterType="inItem">
 	
 		DELETE FROM
 			IN_ITEM
 		WHERE
 			II_NO = #{ii_no}
 	
 	</delete>
 	
 	<select id="outItemSelectList" parameterType="condition" resultType="outItem">
 	
 		SELECT 
			 /*+ INDEX_DESC(OUT_ITEM PK_OI_NO) */
			 OI_PRODUCT_CODE
			,OI_PRODUCT_NAME
			,OI_QTY					
			,DATE_FORMAT(OI_DATE,'%Y-%m-%d')	AS OI_DATE 
		FROM 
			OUT_ITEM
	 
		<where>
			<if test="keyword != null"> 
	      
	        OI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')
	
		    </if> 
			<if test="keyword2 != null">
	 
		AND     
	        OI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
	
		    </if>
			<if test="endDate != null">
	
		AND
<![CDATA[	OI_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
	
			</if>
		</where>
 	</select>
 	
 	<select id="outItemSelectForDefectItem" parameterType="defectItem" resultType="int">
 	
 		SELECT 
 			OI_QTY
 		FROM
 			OUT_ITEM
 		WHERE
	 		OI_DI_NO = #{di_no}
 	
 	</select>
 	
 	<update id="outItemUpdateForDefectItem" parameterType="defectItem">
 	
	 	UPDATE
        	OUT_ITEM
        SET
	        OI_QTY = #{di_qty}
	       ,OI_TYPE = #{di_state}
        WHERE
            OI_NO = (
           			SELECT * FROM 
           			(
					SELECT 
						OI_NO 
					FROM 
						OUT_ITEM OI
					WHERE OI_DI_NO = #{di_no}
					) OI2
				    )
	 
 	</update>
	
	<delete id="outItemDeleteForDefectItem" parameterType="list">
	
		DELETE FROM
			OUT_ITEM
		WHERE 
			OI_DI_NO IN 
		<foreach collection="list" item="item" separator="," open="(" close=")">
		
			#{item.di_no}		
		
 		</foreach>
 		
	</delete>
	
	<!-- 
	==================================================================================
	================================= 재고변동표 =====================================
	==================================================================================
	 -->
 	<select id="changeItemSelectList" parameterType="condition" resultType="changeItem">	  
		
		SELECT
		     T.II_PRODUCT_CODE                  AS PRODUCT_CODE
		    ,T.II_PRODUCT_NAME                  AS PRODUCT_NAME
		    ,IFNULL(B.II_QTY,0) - IFNULL(B.OI_QTY,0)  AS BEFORE_QTY
		    ,IFNULL(T.II_QTY,0) - IFNULL(B.II_QTY,0)  AS IN_QTY
		    ,IFNULL(T.OI_QTY,0) - IFNULL(B.OI_QTY,0)  AS OUT_QTY
		    ,IFNULL(T.II_QTY,0) - IFNULL(T.OI_QTY,0)  AS TOTAL_QTY
		FROM
		    (
		    SELECT 
		         II.II_PRODUCT_CODE     				
		        ,II.II_PRODUCT_NAME         			
		        ,II.II_QTY
		        ,OI.OI_QTY       
		        
		    FROM
		        (
		        SELECT 
		             II_PRODUCT_CODE
		            ,II_PRODUCT_NAME
		            ,SUM(II_QTY)		AS II_QTY
		        FROM 
		            IN_ITEM 	
		    
		        <where>
			      
			      	<if test="keyword != null">
			        II_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        II_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			II_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
					</if>
							
		    	</where>
		    	
		        GROUP BY 
		             II_PRODUCT_CODE
		            ,II_PRODUCT_NAME 
		        ) II
		    LEFT OUTER JOIN
		        (
		        SELECT 
		             OI_PRODUCT_CODE
		            ,IFNULL(SUM(OI_QTY),0)		AS OI_QTY
		        FROM 
		            OUT_ITEM 
		    
		        <where>
			      
			      	<if test="keyword != null">
			        OI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')						    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        OI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			OI_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
					</if>
							
		    	</where>
		          
		        GROUP BY 
		            OI_PRODUCT_CODE
		        ) OI
		    ON
		        II.II_PRODUCT_CODE = OI.OI_PRODUCT_CODE
		UNION
		SELECT 
		         II.II_PRODUCT_CODE     				
		        ,II.II_PRODUCT_NAME         			
		        ,II.II_QTY
		        ,OI.OI_QTY       
		        
		    FROM
		        (
		        SELECT 
		             II_PRODUCT_CODE
		            ,II_PRODUCT_NAME
		            ,SUM(II_QTY)		AS II_QTY
		        FROM 
		            IN_ITEM 	
		    
		        <where>
			      
			      	<if test="keyword != null">
			        II_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        II_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			II_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
					</if>
							
		    	</where>
		    	
		        GROUP BY 
		             II_PRODUCT_CODE
		            ,II_PRODUCT_NAME 
		        ) II
		    RIGHT OUTER JOIN
		        (
		        SELECT 
		             OI_PRODUCT_CODE
		            ,IFNULL(SUM(OI_QTY),0)		AS OI_QTY
		        FROM 
		            OUT_ITEM 
		    
		        <where>
			      
			      	<if test="keyword != null">
			        OI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        OI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			OI_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T')	]]>
					</if>
							
		    	</where>
		          
		        GROUP BY 
		            OI_PRODUCT_CODE
		        ) OI
		    ON
		        II.II_PRODUCT_CODE = OI.OI_PRODUCT_CODE
		    ) T
	
		LEFT JOIN
		    (
		    SELECT
		         II.II_PRODUCT_CODE      			   
		        ,II.II_QTY
		        ,OI.OI_QTY
		        
		    FROM
		        (
		        SELECT 
		             II_PRODUCT_CODE
		            ,SUM(II_QTY)        AS II_QTY
		        FROM 
		            IN_ITEM
		        
		        <where>
			      
			    	<if test="keyword != null">
			        II_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        II_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			II_DATE <= DATE_SUB(DATE_FORMAT(CONCAT(#{startDate},' 23:59:59'),'%Y/%c/%d %T'), INTERVAL 1 DAY)	]]>
					</if>
							
		    	</where>
								
		        GROUP BY 
		            II_PRODUCT_CODE
		        ) II
		    LEFT OUTER JOIN
		        (
		        SELECT 
		             OI_PRODUCT_CODE
		            ,SUM(OI_QTY) 		AS OI_QTY
		        FROM 
		            OUT_ITEM
		        <where>
			      
			    	<if test="keyword != null">
			        OI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        OI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			OI_DATE <= DATE_SUB(DATE_FORMAT(CONCAT(#{startDate},' 23:59:59'),'%Y/%c/%d %T'), INTERVAL 1 DAY)	]]>
					</if>
							
		    	</where>

		        GROUP BY 
		            OI_PRODUCT_CODE
		        ) OI
		    ON
		        II.II_PRODUCT_CODE = OI.OI_PRODUCT_CODE
		    UNION
		    SELECT
		         II.II_PRODUCT_CODE      			   
		        ,II.II_QTY
		        ,OI.OI_QTY
		        
		    FROM
		        (
		        SELECT 
		             II_PRODUCT_CODE
		            ,SUM(II_QTY)        AS II_QTY
		        FROM 
		            IN_ITEM
		        
		        <where>
			      
			    	<if test="keyword != null">
			        II_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        II_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			II_DATE <= DATE_SUB(DATE_FORMAT(CONCAT(#{startDate},' 23:59:59'),'%Y/%c/%d %T'), INTERVAL 1 DAY)	]]>
					</if>
							
		    	</where>
								
		        GROUP BY 
		            II_PRODUCT_CODE
		        ) II
		    RIGHT OUTER JOIN
		        (
		        SELECT 
		             OI_PRODUCT_CODE
		            ,SUM(OI_QTY) 		AS OI_QTY
		        FROM 
		            OUT_ITEM
		        <where>
			      
			    	<if test="keyword != null">
			        OI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')							    
			      	</if>
			 		<if test="keyword2 != null">
				AND     
			        OI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
			 		</if>
					<if test="endDate != null">
				AND
<![CDATA[			OI_DATE <= DATE_SUB(DATE_FORMAT(CONCAT(#{startDate},' 23:59:59'),'%Y/%c/%d %T'), INTERVAL 1 DAY)	]]>
					</if>
							
		    	</where>

		        GROUP BY 
		            OI_PRODUCT_CODE
		        ) OI
		    ON
		        II.II_PRODUCT_CODE = OI.OI_PRODUCT_CODE
		   ) B
		ON
		    B.II_PRODUCT_CODE = T.II_PRODUCT_CODE;
   		    
		
 	</select>

	<select id="defectItemSelectList" parameterType="condition" resultType="defectItem">
		
		SELECT
			 /*+ INDEX(DEFECT_ITEM PK_DI_NO) */
			 DI_NO 
		    ,DI_PRODUCT_CODE
		    ,DI_PRODUCT_NAME
		    ,DI_QTY
		    ,DATE_FORMAT(DI_DATE,'%Y-%m-%d') 		AS DI_DATE
		    ,DI_STATE
		    ,DI_REASON
		FROM 
		    DEFECT_ITEM 
		<where>
		<if test="keyword != null">
		
		    DI_PRODUCT_CODE LIKE CONCAT('%',#{keyword},'%')
		    
		</if>
		<if test="keyword2 != null">
		
		AND
		    DI_PRODUCT_NAME LIKE CONCAT('%',#{keyword2},'%')
		    
		</if>
		<if test="endDate != null">
		
		AND
<![CDATA[	DI_DATE <= DATE_FORMAT(CONCAT(#{endDate},' 23:59:59'),'%Y/%c/%d %T') ]]>
		
		</if>
		</where>
		
	</select> 	
 	
 	<insert id="defectItemInsert" parameterType="defectItem">
		<selectKey  keyProperty="di_no" resultType="int" order="BEFORE">
			SELECT 
				IFNULL(MAX(DI_NO),0) +1
			FROM 
				DEFECT_ITEM
		</selectKey>
		INSERT INTO DEFECT_ITEM
			(
			 DI_NO
			,DI_PRODUCT_CODE
			,DI_PRODUCT_NAME
			,DI_QTY
			,DI_STATE
			,DI_REASON
			) 
		VALUES 
			(
			 #{di_no}
			,#{di_product_code}
			,#{di_product_name}
			,#{di_qty}
			,#{di_state}
			,#{di_reason}
			)
 	</insert>
 	
 	<update id="defectItemUpdates" parameterType="list">	
 		
 		INSERT INTO DEFECT_ITEM
 			(
 			 DI_NO
 			,DI_PRODUCT_CODE
 			,DI_PRODUCT_NAME
 			,DI_QTY
 			,DI_STATE
 			,DI_REASON
 			,DI_DATE
 			)
 		VALUES
 		
 		<foreach collection="list" item="item" separator=",">	
	 		
	 		(
	 		 #{item.di_no}
	 		,#{item.di_product_code}
	 		,#{item.di_product_name}
	 		,#{item.di_qty}
		    ,#{item.di_state}
		    ,#{item.di_reason}
		    ,NOW()
		    )
		    
 		</foreach>
 		
 		ON DUPLICATE KEY UPDATE
 			 DI_PRODUCT_CODE = VALUES(DI_PRODUCT_CODE)
 			,DI_PRODUCT_NAME = VALUES(DI_PRODUCT_NAME)
 			,DI_QTY = VALUES(DI_QTY)
 			,DI_STATE = VALUES(DI_STATE)
 			,DI_REASON = VALUES(DI_REASON)
 			,DI_DATE = VALUES(DI_DATE)
 		
 	</update>
 	
 	<delete id="defectItemDeletes" parameterType="list">
 	
 		DELETE FROM
		    DEFECT_ITEM
		WHERE
			DI_NO IN
 		<foreach collection="list" item="item" separator="," open="(" close=")">
 		
			#{item.di_no}
		    
 		</foreach>
 		
 	</delete>
 	
 	<!-- ================================================================================== -->
 	<!-- ===============================다중 등록========================================== -->
 	<!-- ================================================================================== -->
 	<insert id="itemInsertList" parameterType="list">
		<selectKey  keyProperty="di_no" resultType="int" order="BEFORE">
			
			SELECT 
				IFNULL(MAX(DI_NO),0) +1
			FROM 
				DEFECT_ITEM
			
		</selectKey>
		<foreach item="item" collection="list" open="INSERT ALL"  close="SELECT * FROM DUAL" separator=" " index="index">
		
		INTO DEFECT_ITEM
			(
			 DI_NO
			,DI_PRODUCT_CODE
			,DI_QTY
			,DI_STATE
			,DI_REASON
			) 
		VALUES 
			(
			 (#{di_no} + #{index})
			,#{item.di_product_code}
			,#{item.di_qty}
			,#{item.di_state}
			,#{item.di_reason}
			)
			
		</foreach>
 	</insert>
 	
	<insert id="outItemInsert" parameterType="outItem">
		<selectKey keyProperty="oi_no" resultType="int" order="BEFORE">
			
			SELECT 
				IFNULL(MAX(OI_NO),0) +1
			FROM 
				OUT_ITEM
				
		</selectKey>
		
		INSERT INTO OUT_ITEM
			(
			 OI_NO
			,OI_PRODUCT_CODE
			,OI_PRODUCT_NAME
			,OI_QTY
		<if test="oi_di_no != null">
			,OI_DI_NO
		</if>
		<if test="oi_type != null">
			,OI_TYPE
		</if>
			)
		VALUES
			(
			 (#{oi_no})
			,#{oi_product_code}
			,#{oi_product_name}
			,#{oi_qty}
		<if test="oi_di_no != null">
			,#{oi_di_no}
		</if>
		<if test="oi_type != null">
			,#{oi_type}
		</if>
			)
			
	</insert>
	
 	<insert id="safeItemInserts" parameterType="list">
		
		INSERT INTO SAFE_ITEM
			 (
			  SI_NO
			 ,SI_PRODUCT_CODE
			 ,SI_QTY
			 )
		VALUES
		
		<foreach item="item" collection="list"  separator="," index="index">
			
			(
			 (SELECT IFNULL(MAX(SI_NO),0) +1 FROM SAFE_ITEM S) + #{index}
			,#{item.si_product_code}
			,#{item.si_qty}
			)
			
		</foreach>
		
 	</insert>
 	
 	<select id="safeItemSelectValidate" parameterType="string" resultType="string">
 		
 		SELECT 
 			SI_PRODUCT_CODE 
 		FROM 
 			SAFE_ITEM 
 		WHERE 
 			SI_PRODUCT_CODE = #{si_product_code}
 			
 	</select>
 	
 	<!-- 안전재고 조회 -->
 	<select id="safeItemSelectList" resultType="safeItem">
 		
 		SELECT
 			 S.SI_NO
		    ,S.SI_PRODUCT_CODE
		    ,P.PRODUCT_NAME
		    ,S.SI_QTY
		FROM
		    SAFE_ITEM S
		INNER JOIN
		    PRODUCT P
		ON
	    	S.SI_PRODUCT_CODE = P.PRODUCT_CODE
	    	
 	</select>
 	
 	<update id="safeItemUpdates" parameterType="list">
 	
 		INSERT INTO SAFE_ITEM
 			(
 			 SI_NO
 			,SI_PRODUCT_CODE
 			,SI_QTY
 			)
 		VALUES
 		
 		<foreach collection="list" item="item" separator=",">
 		
			(
			 #{item.si_no}
			,#{item.si_product_code}
			,#{item.si_qty}
			)
		    
 		</foreach>
 		
 		ON DUPLICATE KEY UPDATE
 			 SI_PRODUCT_CODE = VALUES(SI_PRODUCT_CODE)
 			,SI_QTY = VALUES(SI_QTY)
 		
 	</update>
 	
 	<delete id="safeItemDeletes" parameterType="list">
 	
 		DELETE FROM
		    SAFE_ITEM
		WHERE
		    SI_NO IN 
 		<foreach collection="list" item="item" separator="," open="(" close=")">
 		
		    #{item.si_no}
		    
 		</foreach>
 		
 	</delete>
 	
 	<!-- 재고현황과 안전재고 비교 -->
 	<select id="riskItemCount" parameterType="list" resultType="int">
 		
 		SELECT
		      COUNT(*)
		FROM 
		    ITEM I
		INNER JOIN 
		    SAFE_ITEM S
		ON 
		    I.ITEM_PRODUCT_CODE = S.SI_PRODUCT_CODE
		<where>
		<foreach collection="list" item="item" separator="OR">	
		
			(
				I.ITEM_PRODUCT_CODE = #{item.si_product_code} 
			AND 
<![CDATA[		I.ITEM_QTY <= #{item.si_qty} ]]>
			)
		
		</foreach>
		</where>
		
 	</select>
 	
 	<!-- 재고현황과 안전재고 비교 -->
 	<select id="riskItemSelectList" parameterType="list" resultType="risk">
 		
 		SELECT
		       P.PRODUCT_CODE
		      ,P.PRODUCT_NAME
		      ,I.ITEM_QTY
		      ,S.SI_QTY
		FROM 
		    ITEM I
		INNER JOIN 
		    SAFE_ITEM S
		ON 
		    I.ITEM_PRODUCT_CODE = S.SI_PRODUCT_CODE
		INNER JOIN
			PRODUCT P
		ON 
			I.ITEM_PRODUCT_CODE = P.PRODUCT_CODE		    
		<where>
		<foreach collection="list" item="item" separator=" ">
		OR	
			I.ITEM_PRODUCT_CODE = #{item.si_product_code} 
		AND 
<![CDATA[	I.ITEM_QTY <= #{item.si_qty} ]]>
		</foreach>
		</where>
		
 	</select>
 	
	
<select id="safeItemValidate" parameterType="list" resultType="int">

	SELECT 
		COUNT(*) 
	FROM 
		SAFE_ITEM 
	<where>
	<foreach collection="list" item="item" separator=" ">
	OR
		SI_PRODUCT_CODE = #{item.si_product_code}
	</foreach>
	</where> 
	
</select> 	
 

 
</mapper>